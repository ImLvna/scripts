(async()=>{const x=Array.from(document.querySelectorAll(".module-toggler")),z=["video","free-response","example","survey","resource","demo"],k=[];async function A(){const w=Array.from(document.querySelectorAll(z.map((f)=>`.${f}.unopened, .${f}.not-submitted`).join(", ")));for(let f of w){try{if(k.includes(f.href))continue;const P=await fetch(f.href).then((j)=>j.text());if(!P)throw new Error("Error fetching item");const v=P.match(/(?<=studentAssignmentID": )\d+(?=,)/)?.[0];if(!v)throw new Error("Error getting assignment id");const h=new FormData;if(h.append("student_assignment_id",v),h.append("method","submit_assignment"),(await new Promise((j)=>{$.ajax({url:"/lms/ajax/submit_assignment",type:"POST",data:h,processData:!1,contentType:!1,success:(B)=>j(JSON.parse(B))})})).status==="ok")f.classList.remove("unopened"),f.classList.add("reviewed");else throw new Error("Error submitting item")}catch(P){console.log("Error submitting item",f)}k.push(f.href)}}let q=0;for(let w of x)q++,w.click(),await new Promise((f)=>setTimeout(f,1000)),await A(),console.log(`Completed page ${q}`);console.log("Done!")})();
