//! @name a
(async()=>{const v=Array.from(document.querySelectorAll(".module-toggler")),w=["video","free-response","example","survey","resource","demo"],h=[];async function x(){const E=Array.from(document.querySelectorAll(w.map((f)=>`.${f}.unopened, .${f}.not-submitted`).join(", ")));for(let f of E){try{if(h.includes(f.href))continue;const k=await fetch(f.href).then((T)=>T.text());if(!k)throw new Error("Error fetching item");const q=k.match(/(?<=studentAssignmentID": )\d+(?=,)/)?.[0];if(!q)throw new Error("Error getting assignment id");const H=new FormData;if(H.append("student_assignment_id",q),H.append("method","submit_assignment"),(await new Promise((T)=>{$.ajax({url:"/lms/ajax/submit_assignment",type:"POST",data:H,processData:!1,contentType:!1,success:(z)=>T(JSON.parse(z))})})).status==="ok")f.classList.remove("unopened"),f.classList.add("reviewed");else throw new Error("Error submitting item")}catch(k){console.log("Error submitting item",f)}h.push(f.href)}}let j=0;for(let E of v)j++,E.click(),await new Promise((f)=>setTimeout(f,1000)),await x(),console.log(`Completed page ${j}`);console.log("Done!")})();
