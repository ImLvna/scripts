(async()=>{const w=Array.from(document.querySelectorAll(".module-toggler")),z=["video","free-response","example","survey","resource","demo"],j=[];async function B(){const v=Array.from(document.querySelectorAll(z.map((f)=>`.${f}.unopened, .${f}.not-submitted`).join(", ")));for(let f of v){try{if(j.includes(f.href))continue;const x=await fetch(f.href).then((h)=>h.text());if(!x)throw new Error("Error fetching item");const q=x.match(/(?<=studentAssignmentID": )\d+(?=,)/)?.[0];if(!q)throw new Error("Error getting assignment id");const M=new FormData;if(M.append("student_assignment_id",q),M.append("method","submit_assignment"),(await new Promise((h)=>{$.ajax({url:"/lms/ajax/submit_assignment",type:"POST",data:M,processData:!1,contentType:!1,success:(C)=>h(JSON.parse(C))})})).status==="ok")f.classList.remove("unopened"),f.classList.add("reviewed");else throw new Error("Error submitting item")}catch(x){console.log("Error submitting item",f)}j.push(f.href)}}let k=0;for(let v of w)k++,v.click(),await new Promise((f)=>setTimeout(f,1000)),await B(),console.log(`Completed page ${k}`);console.log("Done!")})();
